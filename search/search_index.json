{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Pterodactyl PHP SDK \u00b6 Pterodactyl Panel API SDK for PHP (For Pterodactyl 0.7.x), a forked version from @FruitBytes . Quick start \u00b6 To install the SDK in your project you need to require the package via composer : composer require hcgcloud/pterodactyl-sdk:dev-master Then use Composer's autoload unless you are using a framework that support composer autoload: require __DIR__.'/../vendor/autoload.php'; And finally create an instance of the SDK: $pterodactyl = new \\HCGCloud\\Pterodactyl\\Pterodactyl(API_KEY_HERE, BASE_URI_HERE); Then you can call the apis. Usage \u00b6 Please check this documentation for more details. As our documentation is not finished yet, you can check out the legacy readme file for all functions available of this SDK. Support \u00b6 You can get support by going to our Discord server or submitting new issue . As a third-party API wrapper, We recommend you not asking for help elsewhere, or we may not be able to help you. License \u00b6 hcgcloud/pterodactyl-sdk is licensed under the MIT License (MIT). Please see the license file for more information.","title":"Welcome"},{"location":"#pterodactyl-php-sdk","text":"Pterodactyl Panel API SDK for PHP (For Pterodactyl 0.7.x), a forked version from @FruitBytes .","title":"Pterodactyl PHP SDK"},{"location":"#quick-start","text":"To install the SDK in your project you need to require the package via composer : composer require hcgcloud/pterodactyl-sdk:dev-master Then use Composer's autoload unless you are using a framework that support composer autoload: require __DIR__.'/../vendor/autoload.php'; And finally create an instance of the SDK: $pterodactyl = new \\HCGCloud\\Pterodactyl\\Pterodactyl(API_KEY_HERE, BASE_URI_HERE); Then you can call the apis.","title":"Quick start"},{"location":"#usage","text":"Please check this documentation for more details. As our documentation is not finished yet, you can check out the legacy readme file for all functions available of this SDK.","title":"Usage"},{"location":"#support","text":"You can get support by going to our Discord server or submitting new issue . As a third-party API wrapper, We recommend you not asking for help elsewhere, or we may not be able to help you.","title":"Support"},{"location":"#license","text":"hcgcloud/pterodactyl-sdk is licensed under the MIT License (MIT). Please see the license file for more information.","title":"License"},{"location":"exceptions/","text":"Exceptions \u00b6 FailedActionException \u00b6 This exception is thrown when the server returns 400 . Solution: Check the response body. NotFoundException \u00b6 This exception is thrown when the server returns 404 . Solution: Check if the resource exists. TimeoutException \u00b6 This exception is thrown when the request is timeout. Solution: Check the connection between your server and panel. ValidationException \u00b6 This exception is thrown when the server returns 422 , the given data failed to pass validation. Solution: Check the data you given.","title":"Exceptions"},{"location":"exceptions/#exceptions","text":"","title":"Exceptions"},{"location":"exceptions/#failedactionexception","text":"This exception is thrown when the server returns 400 . Solution: Check the response body.","title":"FailedActionException"},{"location":"exceptions/#notfoundexception","text":"This exception is thrown when the server returns 404 . Solution: Check if the resource exists.","title":"NotFoundException"},{"location":"exceptions/#timeoutexception","text":"This exception is thrown when the request is timeout. Solution: Check the connection between your server and panel.","title":"TimeoutException"},{"location":"exceptions/#validationexception","text":"This exception is thrown when the server returns 422 , the given data failed to pass validation. Solution: Check the data you given.","title":"ValidationException"},{"location":"getting-started/","text":"Getting started \u00b6 Installation \u00b6 To install the SDK in your project you need to require the package via composer : composer require hcgcloud/pterodactyl-sdk:dev-master Then use Composer's autoload unless you are using a framework that support composer autoload: require __DIR__.'/../vendor/autoload.php'; And finally create an instance of the SDK, the API_KEY can be Account API or Application API , you can learn the difference below: $pterodactyl = new \\HCGCloud\\Pterodactyl\\Pterodactyl(API_KEY_HERE, BASE_URI_HERE); or you can also use create an instance in this style: use HCGCloud\\Pterodactyl\\Pterodactyl; $pterodactyl = new Pterodactyl(API_KEY_HERE, BASE_URI_HERE); Usage \u00b6 Type of API \u00b6 Before using other apis, you should know the difference between Account API and Application API . Account API (We call Client API in this docs) \u00b6 Account API is for a single user of your panel, it can perform like Send console command and Send power action while Application API can't. You can generate a key for an administrator account, then you can have the rights to control all servers. Can be generated from: https://yourpanel.url/account/api Application API \u00b6 Application API is for your panel itself, it can perform like Create Server and Create Node while Account API can't. Can be generated from: https://yourpanel.url/admin/api Example \u00b6 Using the pterodactyl instance you may perform multiple actions as well as retrieve the different resources Pterodactyl's API provides, here are some examples using Application API : $servers = $pterodactyl->servers(); This will give you an array of servers that you have access to, each server is represented by an instance of HCGCloud\\Pterodactyl\\Resources\\Server , this instance has multiple public properties like $name , $id , $owner , $memory , and others. You may also retrieve a single server using: $server = $pterodactyl->server(SERVER_ID_HERE); For other functions, you can find them from the navigation.","title":"Getting Started"},{"location":"getting-started/#getting-started","text":"","title":"Getting started"},{"location":"getting-started/#installation","text":"To install the SDK in your project you need to require the package via composer : composer require hcgcloud/pterodactyl-sdk:dev-master Then use Composer's autoload unless you are using a framework that support composer autoload: require __DIR__.'/../vendor/autoload.php'; And finally create an instance of the SDK, the API_KEY can be Account API or Application API , you can learn the difference below: $pterodactyl = new \\HCGCloud\\Pterodactyl\\Pterodactyl(API_KEY_HERE, BASE_URI_HERE); or you can also use create an instance in this style: use HCGCloud\\Pterodactyl\\Pterodactyl; $pterodactyl = new Pterodactyl(API_KEY_HERE, BASE_URI_HERE);","title":"Installation"},{"location":"getting-started/#usage","text":"","title":"Usage"},{"location":"getting-started/#type-of-api","text":"Before using other apis, you should know the difference between Account API and Application API .","title":"Type of API"},{"location":"getting-started/#account-api-we-call-client-api-in-this-docs","text":"Account API is for a single user of your panel, it can perform like Send console command and Send power action while Application API can't. You can generate a key for an administrator account, then you can have the rights to control all servers. Can be generated from: https://yourpanel.url/account/api","title":"Account API (We call Client API in this docs)"},{"location":"getting-started/#application-api","text":"Application API is for your panel itself, it can perform like Create Server and Create Node while Account API can't. Can be generated from: https://yourpanel.url/admin/api","title":"Application API"},{"location":"getting-started/#example","text":"Using the pterodactyl instance you may perform multiple actions as well as retrieve the different resources Pterodactyl's API provides, here are some examples using Application API : $servers = $pterodactyl->servers(); This will give you an array of servers that you have access to, each server is represented by an instance of HCGCloud\\Pterodactyl\\Resources\\Server , this instance has multiple public properties like $name , $id , $owner , $memory , and others. You may also retrieve a single server using: $server = $pterodactyl->server(SERVER_ID_HERE); For other functions, you can find them from the navigation.","title":"Example"},{"location":"references/","text":"References \u00b6 When developing with this SDK, you can also refer to the following contents: Pterodactyl API Reference by Dashflo.net Pterodactyl Panel Source by Pterodactyl official","title":"References"},{"location":"references/#references","text":"When developing with this SDK, you can also refer to the following contents: Pterodactyl API Reference by Dashflo.net Pterodactyl Panel Source by Pterodactyl official","title":"References"},{"location":"resources/","text":"Resources \u00b6 When you use apis like server() , node() , it will return a resource instance. Then you can call the functions of the instance, like $server->update() , $node->delete() , etc. Note Be noticed that when you use functions like update() , the changes won't applied to the instance itself, so you should manually call the get api again to get the latest data. Here's a list of available resource types. Type \u00b6 Allocation \u00b6 The allocation resource. Egg \u00b6 The egg resource. Nest \u00b6 The nest resource. Node \u00b6 The node resource. Functions \u00b6 <?php $node -> delete (); $node -> update ( array $data ); ?> Server \u00b6 The server resource. Functions \u00b6 <?php //Available with Application API $server -> delete (); $server -> forceDelete (); $server -> suspend (); $server -> unsuspend (); $server -> updateDetails ( array $data ); $server -> updateBuild ( array $data ); $server -> updateStartup ( array $data ); $server -> reinstall (); $server -> rebuild (); //Available with Account API $server -> power ( $action ); $server -> command ( $command ); ?> Stats \u00b6 The stats resource. User \u00b6 The user resource. Functions \u00b6 <?php $user -> delete (); $user -> update ( array $data ); ?>","title":"Resources"},{"location":"resources/#resources","text":"When you use apis like server() , node() , it will return a resource instance. Then you can call the functions of the instance, like $server->update() , $node->delete() , etc. Note Be noticed that when you use functions like update() , the changes won't applied to the instance itself, so you should manually call the get api again to get the latest data. Here's a list of available resource types.","title":"Resources"},{"location":"resources/#type","text":"","title":"Type"},{"location":"resources/#allocation","text":"The allocation resource.","title":"Allocation"},{"location":"resources/#egg","text":"The egg resource.","title":"Egg"},{"location":"resources/#nest","text":"The nest resource.","title":"Nest"},{"location":"resources/#node","text":"The node resource.","title":"Node"},{"location":"resources/#functions","text":"<?php $node -> delete (); $node -> update ( array $data ); ?>","title":"Functions"},{"location":"resources/#server","text":"The server resource.","title":"Server"},{"location":"resources/#functions_1","text":"<?php //Available with Application API $server -> delete (); $server -> forceDelete (); $server -> suspend (); $server -> unsuspend (); $server -> updateDetails ( array $data ); $server -> updateBuild ( array $data ); $server -> updateStartup ( array $data ); $server -> reinstall (); $server -> rebuild (); //Available with Account API $server -> power ( $action ); $server -> command ( $command ); ?>","title":"Functions"},{"location":"resources/#stats","text":"The stats resource.","title":"Stats"},{"location":"resources/#user","text":"The user resource.","title":"User"},{"location":"resources/#functions_2","text":"<?php $user -> delete (); $user -> update ( array $data ); ?>","title":"Functions"},{"location":"application/server/create-server/","text":"Create Server with Application API \u00b6 Create a new server. Usage \u00b6 <?php $pterodactyl -> createServer ( array $data ); ?> Parameters \u00b6 Parameter Description Rules data The data to create server data \u00b6 Parameter Description Rules external_id External id sometimes|nullable|string|between:1,191|unique:servers name Name required|string|min:1|max:255 user Server owner's user id required|integer|exists:users,id description Description sometimes|string egg Egg id required|exists:eggs,id pack Pack id sometimes|nullable|numeric|min:0 docker_image Docker image sometimes|string|max:255 startup Startup command required|string limits Limits required|array limits.memory Memory limit required|numeric|min:0 limits.swap Swap limit required|numeric|min:-1 limits.disk Disk limit required|numeric|min:0 limits.io IO limit required|numeric|between:10,1000 limits.cpu CPU limit required|numeric|min:0 feature_limits Feature limits required|array feature_limits.databases Database limit present|nullable|integer|min:0 feature_limits.allocations Allocation limit present|nullable|integer|min:0 environment Environment variables of the eggs present|array allocation Allocation ids sometimes|array allocation.default Default allocation id sometimes|bail|unique:servers|exists:allocations,id allocation.additional Additional allocation ids sometimes|array allocation.additional.* Additional allocation id exists:allocations,id deploy Deploy information sometimes|required|array deploy.locations Deploy locations array deploy.locations.* Deploy location integer|min:1 deploy.dedicated_ip Use dedicated ip or not required_with:deploy,boolean deploy.port_range Port ranges array deploy.port_range.* Port range string start_on_completion Start server after finished installation or not sometimes|boolean skip_scripts Skip egg scripts or not sometimes|boolean oom_disabled Disable oom killer or not sometimes|boolean Returns \u00b6 Returns a server instance . { \"id\" : 14 , \"externalId\" : 11 , \"uuid\" : \"76c59598-22df-4490-92bc-f6fb4a80e0c7\" , \"identifier\" : \"76c59598\" , \"node\" : 1 , \"name\" : \"server1\" , \"description\" : \"\" , \"suspended\" : false , \"pack\" : null , \"createdAt\" : \"2019-01-23T04:38:09+00:00\" , \"updatedAt\" : \"2019-08-05T09:36:13+00:00\" , \"attributes\" : { \"id\" : 14 , \"external_id\" : 11 , \"uuid\" : \"76c59598-22df-4490-92bc-f6fb4a80e0c7\" , \"identifier\" : \"76c59598\" , \"name\" : \"server1\" , \"description\" : \"\" , \"suspended\" : false , \"limits\" : { \"memory\" : 128 , \"swap\" : 0 , \"disk\" : 256 , \"io\" : 500 , \"cpu\" : 0 }, \"feature_limits\" : { \"databases\" : 0 , \"allocations\" : 0 }, \"user\" : 1 , \"node\" : 1 , \"allocation\" : 55 , \"nest\" : 8 , \"egg\" : 20 , \"pack\" : null , \"container\" : { \"startup_command\" : \".\\/Jcmp-Server\" , \"image\" : \"hcgcloud\\/pterodactyl-jc2mp:latest\" , \"installed\" : false , \"environment\" : { \"SERVER_AUTOUPDATE\" : \"0\" , \"STARTUP\" : \".\\/Jcmp-Server\" , \"P_SERVER_LOCATION\" : \"test\" , \"P_SERVER_UUID\" : \"76c59598-22df-4490-92bc-f6fb4a80e0c7\" } }, \"updated_at\" : \"2019-08-05T09:36:13+00:00\" , \"created_at\" : \"2019-01-23T04:38:09+00:00\" , \"relationships\" : { \"allocations\" : { \"object\" : \"list\" , \"data\" : [{ \"object\" : \"allocation\" , \"attributes\" : { \"id\" : 55 , \"ip\" : \"123.123.123.123\" , \"alias\" : \"node-1.pterodactyl.panel\" , \"port\" : 50053 , \"assigned\" : true } }] } } }, \"limits\" : { \"memory\" : 128 , \"swap\" : 0 , \"disk\" : 256 , \"io\" : 500 , \"cpu\" : 0 }, \"allocations\" : [{ \"id\" : 55 , \"nodeId\" : null , \"ip\" : \"123.123.123.123\" , \"ipAlias\" : null , \"port\" : 50053 , \"serverId\" : null , \"createdAt\" : null , \"updatedAt\" : null , \"attributes\" : { \"id\" : 55 , \"ip\" : \"123.123.123.123\" , \"alias\" : \"node-1.pterodactyl.panel\" , \"port\" : 50053 , \"assigned\" : true }, \"object\" : \"allocation\" , \"alias\" : \"node-1.pterodactyl.panel\" , \"assigned\" : true }], \"object\" : \"server\" , \"featureLimits\" : { \"databases\" : 0 , \"allocations\" : 0 }, \"user\" : 1 , \"allocation\" : 55 , \"nest\" : 8 , \"egg\" : 20 , \"container\" : { \"startup_command\" : \".\\/Jcmp-Server\" , \"image\" : \"hcgcloud\\/pterodactyl-jc2mp:latest\" , \"installed\" : false , \"environment\" : { \"SERVER_AUTOUPDATE\" : \"0\" , \"STARTUP\" : \".\\/Jcmp-Server\" , \"P_SERVER_LOCATION\" : \"test\" , \"P_SERVER_UUID\" : \"76c59598-22df-4490-92bc-f6fb4a80e0c7\" } }, \"relationships\" : { \"allocations\" : { \"object\" : \"list\" , \"data\" : [{ \"object\" : \"allocation\" , \"attributes\" : { \"id\" : 55 , \"ip\" : \"123.123.123.123\" , \"alias\" : \"node-1.pterodactyl.panel\" , \"port\" : 50053 , \"assigned\" : true } }] } } } Example \u00b6 <?php $nest_id = 1 ; $egg_id = 5 ; $location_id = 1 ; $egg = $pterodactyl -> egg ( $nest_id , $egg_id ); //get docker_image and startup directly from egg $server = $pterodactyl -> createServer ([ \"external_id\" => '11' , \"name\" => $name , \"user\" => 1 , \"egg\" => $egg_id , \"docker_image\" => $egg -> dockerImage , \"skip_scripts\" => false , \"environment\" => [], \"limits\" => [ \"memory\" => 256 , \"swap\" => 0 , \"disk\" => 1024 , \"io\" => 500 , \"cpu\" => 100 ], \"feature_limits\" => [ \"databases\" => 1 , \"allocations\" => 2 ], \"startup\" => $egg -> startup , \"description\" => \"\" , \"deploy\" => [ \"locations\" => [ $location_id ], \"dedicated_ip\" => false , \"port_range\" => [] ], \"start_on_completion\" => true ]); print_r ( $server ); ?>","title":"Create server"},{"location":"application/server/create-server/#create-server-with-application-api","text":"Create a new server.","title":"Create Server with Application API"},{"location":"application/server/create-server/#usage","text":"<?php $pterodactyl -> createServer ( array $data ); ?>","title":"Usage"},{"location":"application/server/create-server/#parameters","text":"Parameter Description Rules data The data to create server","title":"Parameters"},{"location":"application/server/create-server/#data","text":"Parameter Description Rules external_id External id sometimes|nullable|string|between:1,191|unique:servers name Name required|string|min:1|max:255 user Server owner's user id required|integer|exists:users,id description Description sometimes|string egg Egg id required|exists:eggs,id pack Pack id sometimes|nullable|numeric|min:0 docker_image Docker image sometimes|string|max:255 startup Startup command required|string limits Limits required|array limits.memory Memory limit required|numeric|min:0 limits.swap Swap limit required|numeric|min:-1 limits.disk Disk limit required|numeric|min:0 limits.io IO limit required|numeric|between:10,1000 limits.cpu CPU limit required|numeric|min:0 feature_limits Feature limits required|array feature_limits.databases Database limit present|nullable|integer|min:0 feature_limits.allocations Allocation limit present|nullable|integer|min:0 environment Environment variables of the eggs present|array allocation Allocation ids sometimes|array allocation.default Default allocation id sometimes|bail|unique:servers|exists:allocations,id allocation.additional Additional allocation ids sometimes|array allocation.additional.* Additional allocation id exists:allocations,id deploy Deploy information sometimes|required|array deploy.locations Deploy locations array deploy.locations.* Deploy location integer|min:1 deploy.dedicated_ip Use dedicated ip or not required_with:deploy,boolean deploy.port_range Port ranges array deploy.port_range.* Port range string start_on_completion Start server after finished installation or not sometimes|boolean skip_scripts Skip egg scripts or not sometimes|boolean oom_disabled Disable oom killer or not sometimes|boolean","title":"data"},{"location":"application/server/create-server/#returns","text":"Returns a server instance . { \"id\" : 14 , \"externalId\" : 11 , \"uuid\" : \"76c59598-22df-4490-92bc-f6fb4a80e0c7\" , \"identifier\" : \"76c59598\" , \"node\" : 1 , \"name\" : \"server1\" , \"description\" : \"\" , \"suspended\" : false , \"pack\" : null , \"createdAt\" : \"2019-01-23T04:38:09+00:00\" , \"updatedAt\" : \"2019-08-05T09:36:13+00:00\" , \"attributes\" : { \"id\" : 14 , \"external_id\" : 11 , \"uuid\" : \"76c59598-22df-4490-92bc-f6fb4a80e0c7\" , \"identifier\" : \"76c59598\" , \"name\" : \"server1\" , \"description\" : \"\" , \"suspended\" : false , \"limits\" : { \"memory\" : 128 , \"swap\" : 0 , \"disk\" : 256 , \"io\" : 500 , \"cpu\" : 0 }, \"feature_limits\" : { \"databases\" : 0 , \"allocations\" : 0 }, \"user\" : 1 , \"node\" : 1 , \"allocation\" : 55 , \"nest\" : 8 , \"egg\" : 20 , \"pack\" : null , \"container\" : { \"startup_command\" : \".\\/Jcmp-Server\" , \"image\" : \"hcgcloud\\/pterodactyl-jc2mp:latest\" , \"installed\" : false , \"environment\" : { \"SERVER_AUTOUPDATE\" : \"0\" , \"STARTUP\" : \".\\/Jcmp-Server\" , \"P_SERVER_LOCATION\" : \"test\" , \"P_SERVER_UUID\" : \"76c59598-22df-4490-92bc-f6fb4a80e0c7\" } }, \"updated_at\" : \"2019-08-05T09:36:13+00:00\" , \"created_at\" : \"2019-01-23T04:38:09+00:00\" , \"relationships\" : { \"allocations\" : { \"object\" : \"list\" , \"data\" : [{ \"object\" : \"allocation\" , \"attributes\" : { \"id\" : 55 , \"ip\" : \"123.123.123.123\" , \"alias\" : \"node-1.pterodactyl.panel\" , \"port\" : 50053 , \"assigned\" : true } }] } } }, \"limits\" : { \"memory\" : 128 , \"swap\" : 0 , \"disk\" : 256 , \"io\" : 500 , \"cpu\" : 0 }, \"allocations\" : [{ \"id\" : 55 , \"nodeId\" : null , \"ip\" : \"123.123.123.123\" , \"ipAlias\" : null , \"port\" : 50053 , \"serverId\" : null , \"createdAt\" : null , \"updatedAt\" : null , \"attributes\" : { \"id\" : 55 , \"ip\" : \"123.123.123.123\" , \"alias\" : \"node-1.pterodactyl.panel\" , \"port\" : 50053 , \"assigned\" : true }, \"object\" : \"allocation\" , \"alias\" : \"node-1.pterodactyl.panel\" , \"assigned\" : true }], \"object\" : \"server\" , \"featureLimits\" : { \"databases\" : 0 , \"allocations\" : 0 }, \"user\" : 1 , \"allocation\" : 55 , \"nest\" : 8 , \"egg\" : 20 , \"container\" : { \"startup_command\" : \".\\/Jcmp-Server\" , \"image\" : \"hcgcloud\\/pterodactyl-jc2mp:latest\" , \"installed\" : false , \"environment\" : { \"SERVER_AUTOUPDATE\" : \"0\" , \"STARTUP\" : \".\\/Jcmp-Server\" , \"P_SERVER_LOCATION\" : \"test\" , \"P_SERVER_UUID\" : \"76c59598-22df-4490-92bc-f6fb4a80e0c7\" } }, \"relationships\" : { \"allocations\" : { \"object\" : \"list\" , \"data\" : [{ \"object\" : \"allocation\" , \"attributes\" : { \"id\" : 55 , \"ip\" : \"123.123.123.123\" , \"alias\" : \"node-1.pterodactyl.panel\" , \"port\" : 50053 , \"assigned\" : true } }] } } }","title":"Returns"},{"location":"application/server/create-server/#example","text":"<?php $nest_id = 1 ; $egg_id = 5 ; $location_id = 1 ; $egg = $pterodactyl -> egg ( $nest_id , $egg_id ); //get docker_image and startup directly from egg $server = $pterodactyl -> createServer ([ \"external_id\" => '11' , \"name\" => $name , \"user\" => 1 , \"egg\" => $egg_id , \"docker_image\" => $egg -> dockerImage , \"skip_scripts\" => false , \"environment\" => [], \"limits\" => [ \"memory\" => 256 , \"swap\" => 0 , \"disk\" => 1024 , \"io\" => 500 , \"cpu\" => 100 ], \"feature_limits\" => [ \"databases\" => 1 , \"allocations\" => 2 ], \"startup\" => $egg -> startup , \"description\" => \"\" , \"deploy\" => [ \"locations\" => [ $location_id ], \"dedicated_ip\" => false , \"port_range\" => [] ], \"start_on_completion\" => true ]); print_r ( $server ); ?>","title":"Example"},{"location":"application/server/delete-server/","text":"Delete Server with Application API \u00b6 Delete the given server. Usage \u00b6 <?php $pterodactyl -> deleteServer ( $serverId ); //For a server instance $server -> delete (); ?> Parameters \u00b6 Note The serverId is the id of the server, not identifier , externalId or uuid . Parameter Description Rules serverId The id of the server Returns \u00b6 None Throwing exception if failed. Example \u00b6 <?php try { $pterodactyl -> deleteServer ( 14 ); } catch ( Exception $e ){ print_r ( $e -> getMessage ()); } ?> <?php try { $server = $pterodactyl -> server ( 14 ); $server -> delete (); } catch ( Exception $e ){ print_r ( $e -> getMessage ()); } ?>","title":"Delete server"},{"location":"application/server/delete-server/#delete-server-with-application-api","text":"Delete the given server.","title":"Delete Server with Application API"},{"location":"application/server/delete-server/#usage","text":"<?php $pterodactyl -> deleteServer ( $serverId ); //For a server instance $server -> delete (); ?>","title":"Usage"},{"location":"application/server/delete-server/#parameters","text":"Note The serverId is the id of the server, not identifier , externalId or uuid . Parameter Description Rules serverId The id of the server","title":"Parameters"},{"location":"application/server/delete-server/#returns","text":"None Throwing exception if failed.","title":"Returns"},{"location":"application/server/delete-server/#example","text":"<?php try { $pterodactyl -> deleteServer ( 14 ); } catch ( Exception $e ){ print_r ( $e -> getMessage ()); } ?> <?php try { $server = $pterodactyl -> server ( 14 ); $server -> delete (); } catch ( Exception $e ){ print_r ( $e -> getMessage ()); } ?>","title":"Example"},{"location":"application/server/force-delete-server/","text":"Force delete Server with Application API \u00b6 Force delete the given server. Usage \u00b6 <?php $pterodactyl -> forceDeleteServer ( $serverId ); //For a server instance $server -> forceDelete (); ?> Parameters \u00b6 Note The serverId is the id of the server, not identifier , externalId or uuid . Parameter Description Rules serverId The id of the server Returns \u00b6 None Throwing exception if failed. Example \u00b6 <?php try { $pterodactyl -> forceDeleteServer ( 14 ); } catch ( Exception $e ){ print_r ( $e -> getMessage ()); } ?> <?php try { $server = $pterodactyl -> server ( 14 ); $server -> forceDelete (); } catch ( Exception $e ){ print_r ( $e -> getMessage ()); } ?>","title":"Force delete server"},{"location":"application/server/force-delete-server/#force-delete-server-with-application-api","text":"Force delete the given server.","title":"Force delete Server with Application API"},{"location":"application/server/force-delete-server/#usage","text":"<?php $pterodactyl -> forceDeleteServer ( $serverId ); //For a server instance $server -> forceDelete (); ?>","title":"Usage"},{"location":"application/server/force-delete-server/#parameters","text":"Note The serverId is the id of the server, not identifier , externalId or uuid . Parameter Description Rules serverId The id of the server","title":"Parameters"},{"location":"application/server/force-delete-server/#returns","text":"None Throwing exception if failed.","title":"Returns"},{"location":"application/server/force-delete-server/#example","text":"<?php try { $pterodactyl -> forceDeleteServer ( 14 ); } catch ( Exception $e ){ print_r ( $e -> getMessage ()); } ?> <?php try { $server = $pterodactyl -> server ( 14 ); $server -> forceDelete (); } catch ( Exception $e ){ print_r ( $e -> getMessage ()); } ?>","title":"Example"},{"location":"application/server/rebuild-server/","text":"Rebuild Server with Application API \u00b6 Rebuild the given server. Usage \u00b6 <?php $pterodactyl -> rebuildServer ( $serverId ); //For a server instance $server -> rebuild (); ?> Parameters \u00b6 Note The serverId is the id of the server, not identifier , externalId or uuid . Parameter Description Rules serverId The id of the server Returns \u00b6 None Throwing exception if failed. Example \u00b6 <?php try { $pterodactyl -> rebuildServer ( 14 ); } catch ( Exception $e ){ print_r ( $e -> getMessage ()); } ?> <?php try { $server = $pterodactyl -> server ( 14 ); $server -> rebuild (); } catch ( Exception $e ){ print_r ( $e -> getMessage ()); } ?>","title":"Rebuild server"},{"location":"application/server/rebuild-server/#rebuild-server-with-application-api","text":"Rebuild the given server.","title":"Rebuild Server with Application API"},{"location":"application/server/rebuild-server/#usage","text":"<?php $pterodactyl -> rebuildServer ( $serverId ); //For a server instance $server -> rebuild (); ?>","title":"Usage"},{"location":"application/server/rebuild-server/#parameters","text":"Note The serverId is the id of the server, not identifier , externalId or uuid . Parameter Description Rules serverId The id of the server","title":"Parameters"},{"location":"application/server/rebuild-server/#returns","text":"None Throwing exception if failed.","title":"Returns"},{"location":"application/server/rebuild-server/#example","text":"<?php try { $pterodactyl -> rebuildServer ( 14 ); } catch ( Exception $e ){ print_r ( $e -> getMessage ()); } ?> <?php try { $server = $pterodactyl -> server ( 14 ); $server -> rebuild (); } catch ( Exception $e ){ print_r ( $e -> getMessage ()); } ?>","title":"Example"},{"location":"application/server/reinstall-server/","text":"Reinstall Server with Application API \u00b6 Reinstall the given server. Usage \u00b6 <?php $pterodactyl -> reinstallServer ( $serverId ); //For a server instance $server -> reinstall (); ?> Parameters \u00b6 Note The serverId is the id of the server, not identifier , externalId or uuid . Parameter Description Rules serverId The id of the server Returns \u00b6 None Throwing exception if failed. Example \u00b6 <?php try { $pterodactyl -> reinstallServer ( 14 ); } catch ( Exception $e ){ print_r ( $e -> getMessage ()); } ?> <?php try { $server = $pterodactyl -> server ( 14 ); $server -> reinstall (); } catch ( Exception $e ){ print_r ( $e -> getMessage ()); } ?>","title":"Reinstall server"},{"location":"application/server/reinstall-server/#reinstall-server-with-application-api","text":"Reinstall the given server.","title":"Reinstall Server with Application API"},{"location":"application/server/reinstall-server/#usage","text":"<?php $pterodactyl -> reinstallServer ( $serverId ); //For a server instance $server -> reinstall (); ?>","title":"Usage"},{"location":"application/server/reinstall-server/#parameters","text":"Note The serverId is the id of the server, not identifier , externalId or uuid . Parameter Description Rules serverId The id of the server","title":"Parameters"},{"location":"application/server/reinstall-server/#returns","text":"None Throwing exception if failed.","title":"Returns"},{"location":"application/server/reinstall-server/#example","text":"<?php try { $pterodactyl -> reinstallServer ( 14 ); } catch ( Exception $e ){ print_r ( $e -> getMessage ()); } ?> <?php try { $server = $pterodactyl -> server ( 14 ); $server -> reinstall (); } catch ( Exception $e ){ print_r ( $e -> getMessage ()); } ?>","title":"Example"},{"location":"application/server/server-ex/","text":"Get Server by External Id with Application API \u00b6 Get a server instance by external id, including it's allocations. Usage \u00b6 <?php $pterodactyl -> serverEx ( $externalId ); ?> Parameters \u00b6 Note The externalId is the externalId of the server, not identifier , id or uuid . Parameter Description Rules externalId The externalId of the server Returns \u00b6 Returns a server instance . { \"id\" : 14 , \"externalId\" : 11 , \"uuid\" : \"76c59598-22df-4490-92bc-f6fb4a80e0c7\" , \"identifier\" : \"76c59598\" , \"node\" : 1 , \"name\" : \"server1\" , \"description\" : \"\" , \"suspended\" : false , \"pack\" : null , \"createdAt\" : \"2019-01-23T04:38:09+00:00\" , \"updatedAt\" : \"2019-08-05T09:36:13+00:00\" , \"attributes\" : { \"id\" : 14 , \"external_id\" : 11 , \"uuid\" : \"76c59598-22df-4490-92bc-f6fb4a80e0c7\" , \"identifier\" : \"76c59598\" , \"name\" : \"server1\" , \"description\" : \"\" , \"suspended\" : false , \"limits\" : { \"memory\" : 128 , \"swap\" : 0 , \"disk\" : 256 , \"io\" : 500 , \"cpu\" : 0 }, \"feature_limits\" : { \"databases\" : 0 , \"allocations\" : 0 }, \"user\" : 1 , \"node\" : 1 , \"allocation\" : 55 , \"nest\" : 8 , \"egg\" : 20 , \"pack\" : null , \"container\" : { \"startup_command\" : \".\\/Jcmp-Server\" , \"image\" : \"hcgcloud\\/pterodactyl-jc2mp:latest\" , \"installed\" : true , \"environment\" : { \"SERVER_AUTOUPDATE\" : \"0\" , \"STARTUP\" : \".\\/Jcmp-Server\" , \"P_SERVER_LOCATION\" : \"test\" , \"P_SERVER_UUID\" : \"76c59598-22df-4490-92bc-f6fb4a80e0c7\" } }, \"updated_at\" : \"2019-08-05T09:36:13+00:00\" , \"created_at\" : \"2019-01-23T04:38:09+00:00\" , \"relationships\" : { \"allocations\" : { \"object\" : \"list\" , \"data\" : [{ \"object\" : \"allocation\" , \"attributes\" : { \"id\" : 55 , \"ip\" : \"123.123.123.123\" , \"alias\" : \"node-1.pterodactyl.panel\" , \"port\" : 50053 , \"assigned\" : true } }] } } }, \"limits\" : { \"memory\" : 128 , \"swap\" : 0 , \"disk\" : 256 , \"io\" : 500 , \"cpu\" : 0 }, \"allocations\" : [{ \"id\" : 55 , \"nodeId\" : null , \"ip\" : \"123.123.123.123\" , \"ipAlias\" : null , \"port\" : 50053 , \"serverId\" : null , \"createdAt\" : null , \"updatedAt\" : null , \"attributes\" : { \"id\" : 55 , \"ip\" : \"123.123.123.123\" , \"alias\" : \"node-1.pterodactyl.panel\" , \"port\" : 50053 , \"assigned\" : true }, \"object\" : \"allocation\" , \"alias\" : \"node-1.pterodactyl.panel\" , \"assigned\" : true }], \"object\" : \"server\" , \"featureLimits\" : { \"databases\" : 0 , \"allocations\" : 0 }, \"user\" : 1 , \"allocation\" : 55 , \"nest\" : 8 , \"egg\" : 20 , \"container\" : { \"startup_command\" : \".\\/Jcmp-Server\" , \"image\" : \"hcgcloud\\/pterodactyl-jc2mp:latest\" , \"installed\" : true , \"environment\" : { \"SERVER_AUTOUPDATE\" : \"0\" , \"STARTUP\" : \".\\/Jcmp-Server\" , \"P_SERVER_LOCATION\" : \"test\" , \"P_SERVER_UUID\" : \"76c59598-22df-4490-92bc-f6fb4a80e0c7\" } }, \"relationships\" : { \"allocations\" : { \"object\" : \"list\" , \"data\" : [{ \"object\" : \"allocation\" , \"attributes\" : { \"id\" : 55 , \"ip\" : \"123.123.123.123\" , \"alias\" : \"node-1.pterodactyl.panel\" , \"port\" : 50053 , \"assigned\" : true } }] } } } Example \u00b6 <?php $server = $pterodactyl -> serverEx ( 11 ); print_r ( $server ); ?>","title":"Get server by external id"},{"location":"application/server/server-ex/#get-server-by-external-id-with-application-api","text":"Get a server instance by external id, including it's allocations.","title":"Get Server by External Id with Application API"},{"location":"application/server/server-ex/#usage","text":"<?php $pterodactyl -> serverEx ( $externalId ); ?>","title":"Usage"},{"location":"application/server/server-ex/#parameters","text":"Note The externalId is the externalId of the server, not identifier , id or uuid . Parameter Description Rules externalId The externalId of the server","title":"Parameters"},{"location":"application/server/server-ex/#returns","text":"Returns a server instance . { \"id\" : 14 , \"externalId\" : 11 , \"uuid\" : \"76c59598-22df-4490-92bc-f6fb4a80e0c7\" , \"identifier\" : \"76c59598\" , \"node\" : 1 , \"name\" : \"server1\" , \"description\" : \"\" , \"suspended\" : false , \"pack\" : null , \"createdAt\" : \"2019-01-23T04:38:09+00:00\" , \"updatedAt\" : \"2019-08-05T09:36:13+00:00\" , \"attributes\" : { \"id\" : 14 , \"external_id\" : 11 , \"uuid\" : \"76c59598-22df-4490-92bc-f6fb4a80e0c7\" , \"identifier\" : \"76c59598\" , \"name\" : \"server1\" , \"description\" : \"\" , \"suspended\" : false , \"limits\" : { \"memory\" : 128 , \"swap\" : 0 , \"disk\" : 256 , \"io\" : 500 , \"cpu\" : 0 }, \"feature_limits\" : { \"databases\" : 0 , \"allocations\" : 0 }, \"user\" : 1 , \"node\" : 1 , \"allocation\" : 55 , \"nest\" : 8 , \"egg\" : 20 , \"pack\" : null , \"container\" : { \"startup_command\" : \".\\/Jcmp-Server\" , \"image\" : \"hcgcloud\\/pterodactyl-jc2mp:latest\" , \"installed\" : true , \"environment\" : { \"SERVER_AUTOUPDATE\" : \"0\" , \"STARTUP\" : \".\\/Jcmp-Server\" , \"P_SERVER_LOCATION\" : \"test\" , \"P_SERVER_UUID\" : \"76c59598-22df-4490-92bc-f6fb4a80e0c7\" } }, \"updated_at\" : \"2019-08-05T09:36:13+00:00\" , \"created_at\" : \"2019-01-23T04:38:09+00:00\" , \"relationships\" : { \"allocations\" : { \"object\" : \"list\" , \"data\" : [{ \"object\" : \"allocation\" , \"attributes\" : { \"id\" : 55 , \"ip\" : \"123.123.123.123\" , \"alias\" : \"node-1.pterodactyl.panel\" , \"port\" : 50053 , \"assigned\" : true } }] } } }, \"limits\" : { \"memory\" : 128 , \"swap\" : 0 , \"disk\" : 256 , \"io\" : 500 , \"cpu\" : 0 }, \"allocations\" : [{ \"id\" : 55 , \"nodeId\" : null , \"ip\" : \"123.123.123.123\" , \"ipAlias\" : null , \"port\" : 50053 , \"serverId\" : null , \"createdAt\" : null , \"updatedAt\" : null , \"attributes\" : { \"id\" : 55 , \"ip\" : \"123.123.123.123\" , \"alias\" : \"node-1.pterodactyl.panel\" , \"port\" : 50053 , \"assigned\" : true }, \"object\" : \"allocation\" , \"alias\" : \"node-1.pterodactyl.panel\" , \"assigned\" : true }], \"object\" : \"server\" , \"featureLimits\" : { \"databases\" : 0 , \"allocations\" : 0 }, \"user\" : 1 , \"allocation\" : 55 , \"nest\" : 8 , \"egg\" : 20 , \"container\" : { \"startup_command\" : \".\\/Jcmp-Server\" , \"image\" : \"hcgcloud\\/pterodactyl-jc2mp:latest\" , \"installed\" : true , \"environment\" : { \"SERVER_AUTOUPDATE\" : \"0\" , \"STARTUP\" : \".\\/Jcmp-Server\" , \"P_SERVER_LOCATION\" : \"test\" , \"P_SERVER_UUID\" : \"76c59598-22df-4490-92bc-f6fb4a80e0c7\" } }, \"relationships\" : { \"allocations\" : { \"object\" : \"list\" , \"data\" : [{ \"object\" : \"allocation\" , \"attributes\" : { \"id\" : 55 , \"ip\" : \"123.123.123.123\" , \"alias\" : \"node-1.pterodactyl.panel\" , \"port\" : 50053 , \"assigned\" : true } }] } } }","title":"Returns"},{"location":"application/server/server-ex/#example","text":"<?php $server = $pterodactyl -> serverEx ( 11 ); print_r ( $server ); ?>","title":"Example"},{"location":"application/server/server/","text":"Get Server with Application API \u00b6 Get a server instance, including it's allocations. Usage \u00b6 <?php $pterodactyl -> server ( $serverId ); ?> Parameters \u00b6 Note The serverId is the id of the server, not identifier , externalId or uuid . Parameter Description Rules serverId The id of the server Returns \u00b6 Returns a server instance . { \"id\" : 14 , \"externalId\" : null , \"uuid\" : \"76c59598-22df-4490-92bc-f6fb4a80e0c7\" , \"identifier\" : \"76c59598\" , \"node\" : 1 , \"name\" : \"server1\" , \"description\" : \"\" , \"suspended\" : false , \"pack\" : null , \"createdAt\" : \"2019-01-23T04:38:09+00:00\" , \"updatedAt\" : \"2019-08-05T09:36:13+00:00\" , \"attributes\" : { \"id\" : 14 , \"external_id\" : null , \"uuid\" : \"76c59598-22df-4490-92bc-f6fb4a80e0c7\" , \"identifier\" : \"76c59598\" , \"name\" : \"server1\" , \"description\" : \"\" , \"suspended\" : false , \"limits\" : { \"memory\" : 128 , \"swap\" : 0 , \"disk\" : 256 , \"io\" : 500 , \"cpu\" : 0 }, \"feature_limits\" : { \"databases\" : 0 , \"allocations\" : 0 }, \"user\" : 1 , \"node\" : 1 , \"allocation\" : 55 , \"nest\" : 8 , \"egg\" : 20 , \"pack\" : null , \"container\" : { \"startup_command\" : \".\\/Jcmp-Server\" , \"image\" : \"hcgcloud\\/pterodactyl-jc2mp:latest\" , \"installed\" : true , \"environment\" : { \"SERVER_AUTOUPDATE\" : \"0\" , \"STARTUP\" : \".\\/Jcmp-Server\" , \"P_SERVER_LOCATION\" : \"test\" , \"P_SERVER_UUID\" : \"76c59598-22df-4490-92bc-f6fb4a80e0c7\" } }, \"updated_at\" : \"2019-08-05T09:36:13+00:00\" , \"created_at\" : \"2019-01-23T04:38:09+00:00\" , \"relationships\" : { \"allocations\" : { \"object\" : \"list\" , \"data\" : [{ \"object\" : \"allocation\" , \"attributes\" : { \"id\" : 55 , \"ip\" : \"123.123.123.123\" , \"alias\" : \"node-1.pterodactyl.panel\" , \"port\" : 50053 , \"assigned\" : true } }] } } }, \"limits\" : { \"memory\" : 128 , \"swap\" : 0 , \"disk\" : 256 , \"io\" : 500 , \"cpu\" : 0 }, \"allocations\" : [{ \"id\" : 55 , \"nodeId\" : null , \"ip\" : \"123.123.123.123\" , \"ipAlias\" : null , \"port\" : 50053 , \"serverId\" : null , \"createdAt\" : null , \"updatedAt\" : null , \"attributes\" : { \"id\" : 55 , \"ip\" : \"123.123.123.123\" , \"alias\" : \"node-1.pterodactyl.panel\" , \"port\" : 50053 , \"assigned\" : true }, \"object\" : \"allocation\" , \"alias\" : \"node-1.pterodactyl.panel\" , \"assigned\" : true }], \"object\" : \"server\" , \"featureLimits\" : { \"databases\" : 0 , \"allocations\" : 0 }, \"user\" : 1 , \"allocation\" : 55 , \"nest\" : 8 , \"egg\" : 20 , \"container\" : { \"startup_command\" : \".\\/Jcmp-Server\" , \"image\" : \"hcgcloud\\/pterodactyl-jc2mp:latest\" , \"installed\" : true , \"environment\" : { \"SERVER_AUTOUPDATE\" : \"0\" , \"STARTUP\" : \".\\/Jcmp-Server\" , \"P_SERVER_LOCATION\" : \"test\" , \"P_SERVER_UUID\" : \"76c59598-22df-4490-92bc-f6fb4a80e0c7\" } }, \"relationships\" : { \"allocations\" : { \"object\" : \"list\" , \"data\" : [{ \"object\" : \"allocation\" , \"attributes\" : { \"id\" : 55 , \"ip\" : \"123.123.123.123\" , \"alias\" : \"node-1.pterodactyl.panel\" , \"port\" : 50053 , \"assigned\" : true } }] } } } Example \u00b6 <?php $server = $pterodactyl -> server ( 14 ); print_r ( $server ); ?>","title":"Get server"},{"location":"application/server/server/#get-server-with-application-api","text":"Get a server instance, including it's allocations.","title":"Get Server with Application API"},{"location":"application/server/server/#usage","text":"<?php $pterodactyl -> server ( $serverId ); ?>","title":"Usage"},{"location":"application/server/server/#parameters","text":"Note The serverId is the id of the server, not identifier , externalId or uuid . Parameter Description Rules serverId The id of the server","title":"Parameters"},{"location":"application/server/server/#returns","text":"Returns a server instance . { \"id\" : 14 , \"externalId\" : null , \"uuid\" : \"76c59598-22df-4490-92bc-f6fb4a80e0c7\" , \"identifier\" : \"76c59598\" , \"node\" : 1 , \"name\" : \"server1\" , \"description\" : \"\" , \"suspended\" : false , \"pack\" : null , \"createdAt\" : \"2019-01-23T04:38:09+00:00\" , \"updatedAt\" : \"2019-08-05T09:36:13+00:00\" , \"attributes\" : { \"id\" : 14 , \"external_id\" : null , \"uuid\" : \"76c59598-22df-4490-92bc-f6fb4a80e0c7\" , \"identifier\" : \"76c59598\" , \"name\" : \"server1\" , \"description\" : \"\" , \"suspended\" : false , \"limits\" : { \"memory\" : 128 , \"swap\" : 0 , \"disk\" : 256 , \"io\" : 500 , \"cpu\" : 0 }, \"feature_limits\" : { \"databases\" : 0 , \"allocations\" : 0 }, \"user\" : 1 , \"node\" : 1 , \"allocation\" : 55 , \"nest\" : 8 , \"egg\" : 20 , \"pack\" : null , \"container\" : { \"startup_command\" : \".\\/Jcmp-Server\" , \"image\" : \"hcgcloud\\/pterodactyl-jc2mp:latest\" , \"installed\" : true , \"environment\" : { \"SERVER_AUTOUPDATE\" : \"0\" , \"STARTUP\" : \".\\/Jcmp-Server\" , \"P_SERVER_LOCATION\" : \"test\" , \"P_SERVER_UUID\" : \"76c59598-22df-4490-92bc-f6fb4a80e0c7\" } }, \"updated_at\" : \"2019-08-05T09:36:13+00:00\" , \"created_at\" : \"2019-01-23T04:38:09+00:00\" , \"relationships\" : { \"allocations\" : { \"object\" : \"list\" , \"data\" : [{ \"object\" : \"allocation\" , \"attributes\" : { \"id\" : 55 , \"ip\" : \"123.123.123.123\" , \"alias\" : \"node-1.pterodactyl.panel\" , \"port\" : 50053 , \"assigned\" : true } }] } } }, \"limits\" : { \"memory\" : 128 , \"swap\" : 0 , \"disk\" : 256 , \"io\" : 500 , \"cpu\" : 0 }, \"allocations\" : [{ \"id\" : 55 , \"nodeId\" : null , \"ip\" : \"123.123.123.123\" , \"ipAlias\" : null , \"port\" : 50053 , \"serverId\" : null , \"createdAt\" : null , \"updatedAt\" : null , \"attributes\" : { \"id\" : 55 , \"ip\" : \"123.123.123.123\" , \"alias\" : \"node-1.pterodactyl.panel\" , \"port\" : 50053 , \"assigned\" : true }, \"object\" : \"allocation\" , \"alias\" : \"node-1.pterodactyl.panel\" , \"assigned\" : true }], \"object\" : \"server\" , \"featureLimits\" : { \"databases\" : 0 , \"allocations\" : 0 }, \"user\" : 1 , \"allocation\" : 55 , \"nest\" : 8 , \"egg\" : 20 , \"container\" : { \"startup_command\" : \".\\/Jcmp-Server\" , \"image\" : \"hcgcloud\\/pterodactyl-jc2mp:latest\" , \"installed\" : true , \"environment\" : { \"SERVER_AUTOUPDATE\" : \"0\" , \"STARTUP\" : \".\\/Jcmp-Server\" , \"P_SERVER_LOCATION\" : \"test\" , \"P_SERVER_UUID\" : \"76c59598-22df-4490-92bc-f6fb4a80e0c7\" } }, \"relationships\" : { \"allocations\" : { \"object\" : \"list\" , \"data\" : [{ \"object\" : \"allocation\" , \"attributes\" : { \"id\" : 55 , \"ip\" : \"123.123.123.123\" , \"alias\" : \"node-1.pterodactyl.panel\" , \"port\" : 50053 , \"assigned\" : true } }] } } }","title":"Returns"},{"location":"application/server/server/#example","text":"<?php $server = $pterodactyl -> server ( 14 ); print_r ( $server ); ?>","title":"Example"},{"location":"application/server/servers/","text":"List Servers with Application API \u00b6 Get the collection of servers. Usage \u00b6 <?php $pterodactyl -> servers ( int $page = 1 ); ?> Parameters \u00b6 Parameter Description Rules page The page number Returns \u00b6 { \"data\" : [{ \"id\" : 14 , \"externalId\" : null , \"uuid\" : \"76c59598-22df-4490-92bc-f6fb4a80e0c7\" , \"identifier\" : \"76c59598\" , \"node\" : 1 , \"name\" : \"server1\" , \"description\" : \"\" , \"suspended\" : false , \"pack\" : null , \"createdAt\" : \"2019-01-23T04:38:09+00:00\" , \"updatedAt\" : \"2019-08-05T09:36:13+00:00\" , \"attributes\" : { \"id\" : 14 , \"external_id\" : null , \"uuid\" : \"76c59598-22df-4490-92bc-f6fb4a80e0c7\" , \"identifier\" : \"76c59598\" , \"name\" : \"server1\" , \"description\" : \"\" , \"suspended\" : false , \"limits\" : { \"memory\" : 128 , \"swap\" : 0 , \"disk\" : 256 , \"io\" : 500 , \"cpu\" : 0 }, \"feature_limits\" : { \"databases\" : 0 , \"allocations\" : 0 }, \"user\" : 1 , \"node\" : 1 , \"allocation\" : 55 , \"nest\" : 8 , \"egg\" : 20 , \"pack\" : null , \"container\" : { \"startup_command\" : \".\\/Jcmp-Server\" , \"image\" : \"hcgcloud\\/pterodactyl-jc2mp:latest\" , \"installed\" : true , \"environment\" : { \"SERVER_AUTOUPDATE\" : \"0\" , \"STARTUP\" : \".\\/Jcmp-Server\" , \"P_SERVER_LOCATION\" : \"test\" , \"P_SERVER_UUID\" : \"76c59598-22df-4490-92bc-f6fb4a80e0c7\" } }, \"updated_at\" : \"2019-08-05T09:36:13+00:00\" , \"created_at\" : \"2019-01-23T04:38:09+00:00\" }, \"limits\" : { \"memory\" : 128 , \"swap\" : 0 , \"disk\" : 256 , \"io\" : 500 , \"cpu\" : 0 }, \"allocations\" : [], \"object\" : \"server\" , \"featureLimits\" : { \"databases\" : 0 , \"allocations\" : 0 }, \"user\" : 1 , \"allocation\" : 55 , \"nest\" : 8 , \"egg\" : 20 , \"container\" : { \"startup_command\" : \".\\/Jcmp-Server\" , \"image\" : \"hcgcloud\\/pterodactyl-jc2mp:latest\" , \"installed\" : true , \"environment\" : { \"SERVER_AUTOUPDATE\" : \"0\" , \"STARTUP\" : \".\\/Jcmp-Server\" , \"P_SERVER_LOCATION\" : \"test\" , \"P_SERVER_UUID\" : \"76c59598-22df-4490-92bc-f6fb4a80e0c7\" } } }, { \"id\" : 20 , \"externalId\" : null , \"uuid\" : \"6928f121-45bf-4f95-869a-eaebf02cd2a6\" , \"identifier\" : \"6928f121\" , \"node\" : 1 , \"name\" : \"server2\" , \"description\" : \"\" , \"suspended\" : false , \"pack\" : null , \"createdAt\" : \"2019-01-23T11:18:57+00:00\" , \"updatedAt\" : \"2019-07-28T06:35:00+00:00\" , \"attributes\" : { \"id\" : 20 , \"external_id\" : null , \"uuid\" : \"6928f121-45bf-4f95-869a-eaebf02cd2a6\" , \"identifier\" : \"6928f121\" , \"name\" : \"server2\" , \"description\" : \"\" , \"suspended\" : false , \"limits\" : { \"memory\" : 128 , \"swap\" : 0 , \"disk\" : 512 , \"io\" : 500 , \"cpu\" : 0 }, \"feature_limits\" : { \"databases\" : 0 , \"allocations\" : 0 }, \"user\" : 1 , \"node\" : 1 , \"allocation\" : 73 , \"nest\" : 9 , \"egg\" : 21 , \"pack\" : null , \"container\" : { \"startup_command\" : \".\\/Server\" , \"image\" : \"hcgcloud\\/pterodactyl-jc3mp:latest\" , \"installed\" : true , \"environment\" : { \"SERVER_AUTOUPDATE\" : \"0\" , \"QUERY_PORT\" : \"50072\" , \"HTTP_PORT\" : \"50073\" , \"STARTUP\" : \".\\/Server\" , \"P_SERVER_LOCATION\" : \"test\" , \"P_SERVER_UUID\" : \"6928f121-45bf-4f95-869a-eaebf02cd2a6\" } }, \"updated_at\" : \"2019-07-28T06:35:00+00:00\" , \"created_at\" : \"2019-01-23T11:18:57+00:00\" }, \"limits\" : { \"memory\" : 128 , \"swap\" : 0 , \"disk\" : 512 , \"io\" : 500 , \"cpu\" : 0 }, \"allocations\" : [], \"object\" : \"server\" , \"featureLimits\" : { \"databases\" : 0 , \"allocations\" : 0 }, \"user\" : 1 , \"allocation\" : 73 , \"nest\" : 9 , \"egg\" : 21 , \"container\" : { \"startup_command\" : \".\\/Server\" , \"image\" : \"hcgcloud\\/pterodactyl-jc3mp:latest\" , \"installed\" : true , \"environment\" : { \"SERVER_AUTOUPDATE\" : \"0\" , \"QUERY_PORT\" : \"50072\" , \"HTTP_PORT\" : \"50073\" , \"STARTUP\" : \".\\/Server\" , \"P_SERVER_LOCATION\" : \"test\" , \"P_SERVER_UUID\" : \"6928f121-45bf-4f95-869a-eaebf02cd2a6\" } } }], \"meta\" : { \"pagination\" : { \"total\" : 2 , \"count\" : 2 , \"per_page\" : 15 , \"current_page\" : 1 , \"total_pages\" : 1 , \"links\" : [] } } } Example \u00b6 <?php $server = $pterodactyl -> servers (); print_r ( $server ); ?>","title":"List servers"},{"location":"application/server/servers/#list-servers-with-application-api","text":"Get the collection of servers.","title":"List Servers with Application API"},{"location":"application/server/servers/#usage","text":"<?php $pterodactyl -> servers ( int $page = 1 ); ?>","title":"Usage"},{"location":"application/server/servers/#parameters","text":"Parameter Description Rules page The page number","title":"Parameters"},{"location":"application/server/servers/#returns","text":"{ \"data\" : [{ \"id\" : 14 , \"externalId\" : null , \"uuid\" : \"76c59598-22df-4490-92bc-f6fb4a80e0c7\" , \"identifier\" : \"76c59598\" , \"node\" : 1 , \"name\" : \"server1\" , \"description\" : \"\" , \"suspended\" : false , \"pack\" : null , \"createdAt\" : \"2019-01-23T04:38:09+00:00\" , \"updatedAt\" : \"2019-08-05T09:36:13+00:00\" , \"attributes\" : { \"id\" : 14 , \"external_id\" : null , \"uuid\" : \"76c59598-22df-4490-92bc-f6fb4a80e0c7\" , \"identifier\" : \"76c59598\" , \"name\" : \"server1\" , \"description\" : \"\" , \"suspended\" : false , \"limits\" : { \"memory\" : 128 , \"swap\" : 0 , \"disk\" : 256 , \"io\" : 500 , \"cpu\" : 0 }, \"feature_limits\" : { \"databases\" : 0 , \"allocations\" : 0 }, \"user\" : 1 , \"node\" : 1 , \"allocation\" : 55 , \"nest\" : 8 , \"egg\" : 20 , \"pack\" : null , \"container\" : { \"startup_command\" : \".\\/Jcmp-Server\" , \"image\" : \"hcgcloud\\/pterodactyl-jc2mp:latest\" , \"installed\" : true , \"environment\" : { \"SERVER_AUTOUPDATE\" : \"0\" , \"STARTUP\" : \".\\/Jcmp-Server\" , \"P_SERVER_LOCATION\" : \"test\" , \"P_SERVER_UUID\" : \"76c59598-22df-4490-92bc-f6fb4a80e0c7\" } }, \"updated_at\" : \"2019-08-05T09:36:13+00:00\" , \"created_at\" : \"2019-01-23T04:38:09+00:00\" }, \"limits\" : { \"memory\" : 128 , \"swap\" : 0 , \"disk\" : 256 , \"io\" : 500 , \"cpu\" : 0 }, \"allocations\" : [], \"object\" : \"server\" , \"featureLimits\" : { \"databases\" : 0 , \"allocations\" : 0 }, \"user\" : 1 , \"allocation\" : 55 , \"nest\" : 8 , \"egg\" : 20 , \"container\" : { \"startup_command\" : \".\\/Jcmp-Server\" , \"image\" : \"hcgcloud\\/pterodactyl-jc2mp:latest\" , \"installed\" : true , \"environment\" : { \"SERVER_AUTOUPDATE\" : \"0\" , \"STARTUP\" : \".\\/Jcmp-Server\" , \"P_SERVER_LOCATION\" : \"test\" , \"P_SERVER_UUID\" : \"76c59598-22df-4490-92bc-f6fb4a80e0c7\" } } }, { \"id\" : 20 , \"externalId\" : null , \"uuid\" : \"6928f121-45bf-4f95-869a-eaebf02cd2a6\" , \"identifier\" : \"6928f121\" , \"node\" : 1 , \"name\" : \"server2\" , \"description\" : \"\" , \"suspended\" : false , \"pack\" : null , \"createdAt\" : \"2019-01-23T11:18:57+00:00\" , \"updatedAt\" : \"2019-07-28T06:35:00+00:00\" , \"attributes\" : { \"id\" : 20 , \"external_id\" : null , \"uuid\" : \"6928f121-45bf-4f95-869a-eaebf02cd2a6\" , \"identifier\" : \"6928f121\" , \"name\" : \"server2\" , \"description\" : \"\" , \"suspended\" : false , \"limits\" : { \"memory\" : 128 , \"swap\" : 0 , \"disk\" : 512 , \"io\" : 500 , \"cpu\" : 0 }, \"feature_limits\" : { \"databases\" : 0 , \"allocations\" : 0 }, \"user\" : 1 , \"node\" : 1 , \"allocation\" : 73 , \"nest\" : 9 , \"egg\" : 21 , \"pack\" : null , \"container\" : { \"startup_command\" : \".\\/Server\" , \"image\" : \"hcgcloud\\/pterodactyl-jc3mp:latest\" , \"installed\" : true , \"environment\" : { \"SERVER_AUTOUPDATE\" : \"0\" , \"QUERY_PORT\" : \"50072\" , \"HTTP_PORT\" : \"50073\" , \"STARTUP\" : \".\\/Server\" , \"P_SERVER_LOCATION\" : \"test\" , \"P_SERVER_UUID\" : \"6928f121-45bf-4f95-869a-eaebf02cd2a6\" } }, \"updated_at\" : \"2019-07-28T06:35:00+00:00\" , \"created_at\" : \"2019-01-23T11:18:57+00:00\" }, \"limits\" : { \"memory\" : 128 , \"swap\" : 0 , \"disk\" : 512 , \"io\" : 500 , \"cpu\" : 0 }, \"allocations\" : [], \"object\" : \"server\" , \"featureLimits\" : { \"databases\" : 0 , \"allocations\" : 0 }, \"user\" : 1 , \"allocation\" : 73 , \"nest\" : 9 , \"egg\" : 21 , \"container\" : { \"startup_command\" : \".\\/Server\" , \"image\" : \"hcgcloud\\/pterodactyl-jc3mp:latest\" , \"installed\" : true , \"environment\" : { \"SERVER_AUTOUPDATE\" : \"0\" , \"QUERY_PORT\" : \"50072\" , \"HTTP_PORT\" : \"50073\" , \"STARTUP\" : \".\\/Server\" , \"P_SERVER_LOCATION\" : \"test\" , \"P_SERVER_UUID\" : \"6928f121-45bf-4f95-869a-eaebf02cd2a6\" } } }], \"meta\" : { \"pagination\" : { \"total\" : 2 , \"count\" : 2 , \"per_page\" : 15 , \"current_page\" : 1 , \"total_pages\" : 1 , \"links\" : [] } } }","title":"Returns"},{"location":"application/server/servers/#example","text":"<?php $server = $pterodactyl -> servers (); print_r ( $server ); ?>","title":"Example"},{"location":"application/server/suspend-server/","text":"Suspend Server with Application API \u00b6 Suspend the given server. Usage \u00b6 <?php $pterodactyl -> suspendServer ( $serverId ); //For a server instance $server -> suspend (); ?> Parameters \u00b6 Note The serverId is the id of the server, not identifier , externalId or uuid . Parameter Description Rules serverId The id of the server Returns \u00b6 None Throwing exception if failed. Example \u00b6 <?php try { $pterodactyl -> suspendServer ( 14 ); } catch ( Exception $e ){ print_r ( $e -> getMessage ()); } ?> <?php try { $server = $pterodactyl -> server ( 14 ); $server -> suspend (); } catch ( Exception $e ){ print_r ( $e -> getMessage ()); } ?>","title":"Suspend server"},{"location":"application/server/suspend-server/#suspend-server-with-application-api","text":"Suspend the given server.","title":"Suspend Server with Application API"},{"location":"application/server/suspend-server/#usage","text":"<?php $pterodactyl -> suspendServer ( $serverId ); //For a server instance $server -> suspend (); ?>","title":"Usage"},{"location":"application/server/suspend-server/#parameters","text":"Note The serverId is the id of the server, not identifier , externalId or uuid . Parameter Description Rules serverId The id of the server","title":"Parameters"},{"location":"application/server/suspend-server/#returns","text":"None Throwing exception if failed.","title":"Returns"},{"location":"application/server/suspend-server/#example","text":"<?php try { $pterodactyl -> suspendServer ( 14 ); } catch ( Exception $e ){ print_r ( $e -> getMessage ()); } ?> <?php try { $server = $pterodactyl -> server ( 14 ); $server -> suspend (); } catch ( Exception $e ){ print_r ( $e -> getMessage ()); } ?>","title":"Example"},{"location":"application/server/unsuspend-server/","text":"Unsuspend Server with Application API \u00b6 Unsuspend the given server. Usage \u00b6 <?php $pterodactyl -> unsuspendServer ( $serverId ); //For a server instance $server -> unsuspend (); ?> Parameters \u00b6 Note The serverId is the id of the server, not identifier , externalId or uuid . Parameter Description Rules serverId The id of the server Returns \u00b6 None Throwing exception if failed. Example \u00b6 <?php try { $pterodactyl -> unsuspendServer ( 14 ); } catch ( Exception $e ){ print_r ( $e -> getMessage ()); } ?> <?php try { $server = $pterodactyl -> server ( 14 ); $server -> unsuspend (); } catch ( Exception $e ){ print_r ( $e -> getMessage ()); } ?>","title":"Unsuspend server"},{"location":"application/server/unsuspend-server/#unsuspend-server-with-application-api","text":"Unsuspend the given server.","title":"Unsuspend Server with Application API"},{"location":"application/server/unsuspend-server/#usage","text":"<?php $pterodactyl -> unsuspendServer ( $serverId ); //For a server instance $server -> unsuspend (); ?>","title":"Usage"},{"location":"application/server/unsuspend-server/#parameters","text":"Note The serverId is the id of the server, not identifier , externalId or uuid . Parameter Description Rules serverId The id of the server","title":"Parameters"},{"location":"application/server/unsuspend-server/#returns","text":"None Throwing exception if failed.","title":"Returns"},{"location":"application/server/unsuspend-server/#example","text":"<?php try { $pterodactyl -> unsuspendServer ( 14 ); } catch ( Exception $e ){ print_r ( $e -> getMessage ()); } ?> <?php try { $server = $pterodactyl -> server ( 14 ); $server -> unsuspend (); } catch ( Exception $e ){ print_r ( $e -> getMessage ()); } ?>","title":"Example"},{"location":"application/server/update-server-details/","text":"Update Server Details with Application API \u00b6 Update details of the given server. Usage \u00b6 <?php $pterodactyl -> updateServerDetails ( $serverId , array $data ); //For a server instance $server -> updateDetails ( array $data ); ?> Parameters \u00b6 Note The serverId is the id of the server, not identifier , externalId or uuid . Parameter Description Rules serverId The id of the server data The data you want to update data \u00b6 Parameter Description Rules external_id External id sometimes|nullable|string|between:1,191|unique:servers name Name required|string|min:1|max:255 user Server owner's user id required|integer|exists:users,id description Description sometimes|nullable|string Returns \u00b6 None Throwing exception if failed. Example \u00b6 <?php try { $pterodactyl -> updateServerDetails ( 14 , [ 'name' => 'newserver' , 'user' => 1 , 'description' => 'mynewdescription' ]); } catch ( Exception $e ){ print_r ( $e -> getMessage ()); } ?> <?php try { $server = $pterodactyl -> server ( 14 ); $server -> updateDetails ([ 'name' => 'newserver' , 'user' => 1 , 'description' => 'mynewdescription' ]); } catch ( Exception $e ){ print_r ( $e -> getMessage ()); } ?>","title":"Update server details"},{"location":"application/server/update-server-details/#update-server-details-with-application-api","text":"Update details of the given server.","title":"Update Server Details with Application API"},{"location":"application/server/update-server-details/#usage","text":"<?php $pterodactyl -> updateServerDetails ( $serverId , array $data ); //For a server instance $server -> updateDetails ( array $data ); ?>","title":"Usage"},{"location":"application/server/update-server-details/#parameters","text":"Note The serverId is the id of the server, not identifier , externalId or uuid . Parameter Description Rules serverId The id of the server data The data you want to update","title":"Parameters"},{"location":"application/server/update-server-details/#data","text":"Parameter Description Rules external_id External id sometimes|nullable|string|between:1,191|unique:servers name Name required|string|min:1|max:255 user Server owner's user id required|integer|exists:users,id description Description sometimes|nullable|string","title":"data"},{"location":"application/server/update-server-details/#returns","text":"None Throwing exception if failed.","title":"Returns"},{"location":"application/server/update-server-details/#example","text":"<?php try { $pterodactyl -> updateServerDetails ( 14 , [ 'name' => 'newserver' , 'user' => 1 , 'description' => 'mynewdescription' ]); } catch ( Exception $e ){ print_r ( $e -> getMessage ()); } ?> <?php try { $server = $pterodactyl -> server ( 14 ); $server -> updateDetails ([ 'name' => 'newserver' , 'user' => 1 , 'description' => 'mynewdescription' ]); } catch ( Exception $e ){ print_r ( $e -> getMessage ()); } ?>","title":"Example"},{"location":"client/command-server/","text":"Command Server with Account API \u00b6 Send a command to a given server. Usage \u00b6 <?php $pterodactyl -> commandServer ( $serverIdentifier , $command ); //For a server instance $server -> command ( $command ); ?> Parameters \u00b6 Note The serverIdentifier is the identifier of the server, not id , externalId or uuid . Parameter Description Rules serverIdentifier The identifier of the server command The command you want to send Returns \u00b6 None Throwing exception if failed. Example \u00b6 <?php try { $pterodactyl -> commandServer ( '76c59598' , 'shutdown' ); } catch ( Exception $e ){ print_r ( $e -> getMessage ()); } ?> <?php try { $server = $pterodactyl -> getServer ( '76c59598' ); $server -> command ( 'shutdown' ); } catch ( Exception $e ){ print_r ( $e -> getMessage ()); } ?>","title":"Command server"},{"location":"client/command-server/#command-server-with-account-api","text":"Send a command to a given server.","title":"Command Server with Account API"},{"location":"client/command-server/#usage","text":"<?php $pterodactyl -> commandServer ( $serverIdentifier , $command ); //For a server instance $server -> command ( $command ); ?>","title":"Usage"},{"location":"client/command-server/#parameters","text":"Note The serverIdentifier is the identifier of the server, not id , externalId or uuid . Parameter Description Rules serverIdentifier The identifier of the server command The command you want to send","title":"Parameters"},{"location":"client/command-server/#returns","text":"None Throwing exception if failed.","title":"Returns"},{"location":"client/command-server/#example","text":"<?php try { $pterodactyl -> commandServer ( '76c59598' , 'shutdown' ); } catch ( Exception $e ){ print_r ( $e -> getMessage ()); } ?> <?php try { $server = $pterodactyl -> getServer ( '76c59598' ); $server -> command ( 'shutdown' ); } catch ( Exception $e ){ print_r ( $e -> getMessage ()); } ?>","title":"Example"},{"location":"client/get-server/","text":"Get Server with Account API \u00b6 Get the details of a given server. Usage \u00b6 <?php $pterodactyl -> getServer ( $serverIdentifier ); ?> Parameters \u00b6 Note The serverIdentifier is the identifier of the server, not id , externalId or uuid . Parameter Description Rules serverIdentifier The identifier of the server Returns \u00b6 Returns a server instance . Note id , externalId , node , suspended , pack , createdAt , updatedAt will be always null , as they're not available with Account API. { \"id\" : null , \"externalId\" : null , \"uuid\" : \"76c59598-22df-4490-92bc-f6fb4a80e0c7\" , \"identifier\" : \"76c59598\" , \"node\" : null , \"name\" : \"server1\" , \"description\" : \"\" , \"suspended\" : null , \"pack\" : null , \"createdAt\" : null , \"updatedAt\" : null , \"attributes\" : { \"server_owner\" : true , \"identifier\" : \"76c59598\" , \"uuid\" : \"76c59598-22df-4490-92bc-f6fb4a80e0c7\" , \"name\" : \"server1\" , \"description\" : \"\" , \"limits\" : { \"memory\" : 128 , \"swap\" : 0 , \"disk\" : 256 , \"io\" : 500 , \"cpu\" : 0 }, \"feature_limits\" : { \"databases\" : 0 , \"allocations\" : 0 } }, \"limits\" : { \"memory\" : 128 , \"swap\" : 0 , \"disk\" : 256 , \"io\" : 500 , \"cpu\" : 0 }, \"allocations\" : [], \"object\" : \"server\" , \"serverOwner\" : true , \"featureLimits\" : { \"databases\" : 0 , \"allocations\" : 0 } } Example \u00b6 <?php $server = $pterodactyl -> getServer ( '76c59598' ); print_r ( $server ); ?>","title":"Get server"},{"location":"client/get-server/#get-server-with-account-api","text":"Get the details of a given server.","title":"Get Server with Account API"},{"location":"client/get-server/#usage","text":"<?php $pterodactyl -> getServer ( $serverIdentifier ); ?>","title":"Usage"},{"location":"client/get-server/#parameters","text":"Note The serverIdentifier is the identifier of the server, not id , externalId or uuid . Parameter Description Rules serverIdentifier The identifier of the server","title":"Parameters"},{"location":"client/get-server/#returns","text":"Returns a server instance . Note id , externalId , node , suspended , pack , createdAt , updatedAt will be always null , as they're not available with Account API. { \"id\" : null , \"externalId\" : null , \"uuid\" : \"76c59598-22df-4490-92bc-f6fb4a80e0c7\" , \"identifier\" : \"76c59598\" , \"node\" : null , \"name\" : \"server1\" , \"description\" : \"\" , \"suspended\" : null , \"pack\" : null , \"createdAt\" : null , \"updatedAt\" : null , \"attributes\" : { \"server_owner\" : true , \"identifier\" : \"76c59598\" , \"uuid\" : \"76c59598-22df-4490-92bc-f6fb4a80e0c7\" , \"name\" : \"server1\" , \"description\" : \"\" , \"limits\" : { \"memory\" : 128 , \"swap\" : 0 , \"disk\" : 256 , \"io\" : 500 , \"cpu\" : 0 }, \"feature_limits\" : { \"databases\" : 0 , \"allocations\" : 0 } }, \"limits\" : { \"memory\" : 128 , \"swap\" : 0 , \"disk\" : 256 , \"io\" : 500 , \"cpu\" : 0 }, \"allocations\" : [], \"object\" : \"server\" , \"serverOwner\" : true , \"featureLimits\" : { \"databases\" : 0 , \"allocations\" : 0 } }","title":"Returns"},{"location":"client/get-server/#example","text":"<?php $server = $pterodactyl -> getServer ( '76c59598' ); print_r ( $server ); ?>","title":"Example"},{"location":"client/list-servers/","text":"List Servers with Account API \u00b6 Get the collection of servers for the authenticated user. Usage \u00b6 <?php $pterodactyl -> listServers ( int $page = 1 ); ?> Parameters \u00b6 Parameter Description Rules page The page number Returns \u00b6 Note id , externalId , node , suspended , pack , createdAt , updatedAt will be always null , as they're not available with Account API. { \"data\" : [{ \"id\" : null , \"externalId\" : null , \"uuid\" : \"76c59598-22df-4490-92bc-f6fb4a80e0c7\" , \"identifier\" : \"76c59598\" , \"node\" : null , \"name\" : \"server1\" , \"description\" : \"\" , \"suspended\" : null , \"pack\" : null , \"createdAt\" : null , \"updatedAt\" : null , \"attributes\" : { \"server_owner\" : true , \"identifier\" : \"76c59598\" , \"uuid\" : \"76c59598-22df-4490-92bc-f6fb4a80e0c7\" , \"name\" : \"server1\" , \"description\" : \"\" , \"limits\" : { \"memory\" : 128 , \"swap\" : 0 , \"disk\" : 256 , \"io\" : 500 , \"cpu\" : 0 }, \"feature_limits\" : { \"databases\" : 0 , \"allocations\" : 0 } }, \"limits\" : { \"memory\" : 128 , \"swap\" : 0 , \"disk\" : 256 , \"io\" : 500 , \"cpu\" : 0 }, \"allocations\" : [], \"object\" : \"server\" , \"serverOwner\" : true , \"featureLimits\" : { \"databases\" : 0 , \"allocations\" : 0 } }, { \"id\" : null , \"externalId\" : null , \"uuid\" : \"6928f121-45bf-4f95-869a-eaebf02cd2a6\" , \"identifier\" : \"6928f121\" , \"node\" : null , \"name\" : \"server2\" , \"description\" : \"\" , \"suspended\" : null , \"pack\" : null , \"createdAt\" : null , \"updatedAt\" : null , \"attributes\" : { \"server_owner\" : true , \"identifier\" : \"6928f121\" , \"uuid\" : \"6928f121-45bf-4f95-869a-eaebf02cd2a6\" , \"name\" : \"server2\" , \"description\" : \"\" , \"limits\" : { \"memory\" : 128 , \"swap\" : 0 , \"disk\" : 512 , \"io\" : 500 , \"cpu\" : 0 }, \"feature_limits\" : { \"databases\" : 0 , \"allocations\" : 0 } }, \"limits\" : { \"memory\" : 128 , \"swap\" : 0 , \"disk\" : 512 , \"io\" : 500 , \"cpu\" : 0 }, \"allocations\" : [], \"object\" : \"server\" , \"serverOwner\" : true , \"featureLimits\" : { \"databases\" : 0 , \"allocations\" : 0 } }], \"meta\" : { \"pagination\" : { \"total\" : 2 , \"count\" : 2 , \"per_page\" : 15 , \"current_page\" : 1 , \"total_pages\" : 1 , \"links\" : [] } } } Example \u00b6 <?php $server = $pterodactyl -> listServers (); print_r ( $server ); ?>","title":"List servers"},{"location":"client/list-servers/#list-servers-with-account-api","text":"Get the collection of servers for the authenticated user.","title":"List Servers with Account API"},{"location":"client/list-servers/#usage","text":"<?php $pterodactyl -> listServers ( int $page = 1 ); ?>","title":"Usage"},{"location":"client/list-servers/#parameters","text":"Parameter Description Rules page The page number","title":"Parameters"},{"location":"client/list-servers/#returns","text":"Note id , externalId , node , suspended , pack , createdAt , updatedAt will be always null , as they're not available with Account API. { \"data\" : [{ \"id\" : null , \"externalId\" : null , \"uuid\" : \"76c59598-22df-4490-92bc-f6fb4a80e0c7\" , \"identifier\" : \"76c59598\" , \"node\" : null , \"name\" : \"server1\" , \"description\" : \"\" , \"suspended\" : null , \"pack\" : null , \"createdAt\" : null , \"updatedAt\" : null , \"attributes\" : { \"server_owner\" : true , \"identifier\" : \"76c59598\" , \"uuid\" : \"76c59598-22df-4490-92bc-f6fb4a80e0c7\" , \"name\" : \"server1\" , \"description\" : \"\" , \"limits\" : { \"memory\" : 128 , \"swap\" : 0 , \"disk\" : 256 , \"io\" : 500 , \"cpu\" : 0 }, \"feature_limits\" : { \"databases\" : 0 , \"allocations\" : 0 } }, \"limits\" : { \"memory\" : 128 , \"swap\" : 0 , \"disk\" : 256 , \"io\" : 500 , \"cpu\" : 0 }, \"allocations\" : [], \"object\" : \"server\" , \"serverOwner\" : true , \"featureLimits\" : { \"databases\" : 0 , \"allocations\" : 0 } }, { \"id\" : null , \"externalId\" : null , \"uuid\" : \"6928f121-45bf-4f95-869a-eaebf02cd2a6\" , \"identifier\" : \"6928f121\" , \"node\" : null , \"name\" : \"server2\" , \"description\" : \"\" , \"suspended\" : null , \"pack\" : null , \"createdAt\" : null , \"updatedAt\" : null , \"attributes\" : { \"server_owner\" : true , \"identifier\" : \"6928f121\" , \"uuid\" : \"6928f121-45bf-4f95-869a-eaebf02cd2a6\" , \"name\" : \"server2\" , \"description\" : \"\" , \"limits\" : { \"memory\" : 128 , \"swap\" : 0 , \"disk\" : 512 , \"io\" : 500 , \"cpu\" : 0 }, \"feature_limits\" : { \"databases\" : 0 , \"allocations\" : 0 } }, \"limits\" : { \"memory\" : 128 , \"swap\" : 0 , \"disk\" : 512 , \"io\" : 500 , \"cpu\" : 0 }, \"allocations\" : [], \"object\" : \"server\" , \"serverOwner\" : true , \"featureLimits\" : { \"databases\" : 0 , \"allocations\" : 0 } }], \"meta\" : { \"pagination\" : { \"total\" : 2 , \"count\" : 2 , \"per_page\" : 15 , \"current_page\" : 1 , \"total_pages\" : 1 , \"links\" : [] } } }","title":"Returns"},{"location":"client/list-servers/#example","text":"<?php $server = $pterodactyl -> listServers (); print_r ( $server ); ?>","title":"Example"},{"location":"client/power-server/","text":"Power Server with Account API \u00b6 Toggle the power on a given server. Usage \u00b6 <?php $pterodactyl -> powerServer ( $serverIdentifier , $action ); //For a server instance $server -> power ( $action ); ?> Parameters \u00b6 Note The serverIdentifier is the identifier of the server, not id , externalId or uuid . Parameter Description Rules serverIdentifier The identifier of the server action The action you want to send in:start,stop,restart,kill Returns \u00b6 None Throwing exception if failed. Example \u00b6 <?php try { $pterodactyl -> powerServer ( '76c59598' , 'restart' ); } catch ( Exception $e ){ print_r ( $e -> getMessage ()); } ?> <?php try { $server = $pterodactyl -> getServer ( '76c59598' ); $server -> power ( 'restart' ); } catch ( Exception $e ){ print_r ( $e -> getMessage ()); } ?>","title":"Power server"},{"location":"client/power-server/#power-server-with-account-api","text":"Toggle the power on a given server.","title":"Power Server with Account API"},{"location":"client/power-server/#usage","text":"<?php $pterodactyl -> powerServer ( $serverIdentifier , $action ); //For a server instance $server -> power ( $action ); ?>","title":"Usage"},{"location":"client/power-server/#parameters","text":"Note The serverIdentifier is the identifier of the server, not id , externalId or uuid . Parameter Description Rules serverIdentifier The identifier of the server action The action you want to send in:start,stop,restart,kill","title":"Parameters"},{"location":"client/power-server/#returns","text":"None Throwing exception if failed.","title":"Returns"},{"location":"client/power-server/#example","text":"<?php try { $pterodactyl -> powerServer ( '76c59598' , 'restart' ); } catch ( Exception $e ){ print_r ( $e -> getMessage ()); } ?> <?php try { $server = $pterodactyl -> getServer ( '76c59598' ); $server -> power ( 'restart' ); } catch ( Exception $e ){ print_r ( $e -> getMessage ()); } ?>","title":"Example"},{"location":"client/utilization-server/","text":"Utilization Server with Account API \u00b6 Get the utilization of a given server. Usage \u00b6 <?php $pterodactyl -> utilizationServer ( $serverIdentifier ); ?> Parameters \u00b6 Note The serverIdentifier is the identifier of the server, not id , externalId or uuid . Parameter Description Rules serverIdentifier The identifier of the server Returns \u00b6 { \"cpu\" : { \"current\" : 199.337 , \"cores\" : [ 16.999 , 105.385 , 1.226 , 1.764 , 4.335 , 0.559 , 14.094 , 0 , 53.014 , 1.962 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 ], \"limit\" : 0 }, \"disk\" : { \"current\" : 205 , \"limit\" : 256 }, \"memory\" : { \"current\" : 97 , \"limit\" : 128 }, \"state\" : \"on\" , \"attributes\" : { \"state\" : \"on\" , \"memory\" : { \"current\" : 97 , \"limit\" : 128 }, \"cpu\" : { \"current\" : 199.337 , \"cores\" : [ 16.999 , 105.385 , 1.226 , 1.764 , 4.335 , 0.559 , 14.094 , 0 , 53.014 , 1.962 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 ], \"limit\" : 0 }, \"disk\" : { \"current\" : 205 , \"limit\" : 256 } }, \"object\" : \"stats\" } Example \u00b6 <?php $server = $pterodactyl -> utilizationServer ( '76c59598' ); print_r ( $server ); ?>","title":"Utilization server"},{"location":"client/utilization-server/#utilization-server-with-account-api","text":"Get the utilization of a given server.","title":"Utilization Server with Account API"},{"location":"client/utilization-server/#usage","text":"<?php $pterodactyl -> utilizationServer ( $serverIdentifier ); ?>","title":"Usage"},{"location":"client/utilization-server/#parameters","text":"Note The serverIdentifier is the identifier of the server, not id , externalId or uuid . Parameter Description Rules serverIdentifier The identifier of the server","title":"Parameters"},{"location":"client/utilization-server/#returns","text":"{ \"cpu\" : { \"current\" : 199.337 , \"cores\" : [ 16.999 , 105.385 , 1.226 , 1.764 , 4.335 , 0.559 , 14.094 , 0 , 53.014 , 1.962 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 ], \"limit\" : 0 }, \"disk\" : { \"current\" : 205 , \"limit\" : 256 }, \"memory\" : { \"current\" : 97 , \"limit\" : 128 }, \"state\" : \"on\" , \"attributes\" : { \"state\" : \"on\" , \"memory\" : { \"current\" : 97 , \"limit\" : 128 }, \"cpu\" : { \"current\" : 199.337 , \"cores\" : [ 16.999 , 105.385 , 1.226 , 1.764 , 4.335 , 0.559 , 14.094 , 0 , 53.014 , 1.962 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 ], \"limit\" : 0 }, \"disk\" : { \"current\" : 205 , \"limit\" : 256 } }, \"object\" : \"stats\" }","title":"Returns"},{"location":"client/utilization-server/#example","text":"<?php $server = $pterodactyl -> utilizationServer ( '76c59598' ); print_r ( $server ); ?>","title":"Example"}]}