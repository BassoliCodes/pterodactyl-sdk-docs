{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Pterodactyl PHP SDK \u00b6 Pterodactyl Panel API SDK for PHP (For Pterodactyl 0.7.x), a forked version from @FruitBytes. Quick start \u00b6 To install the SDK in your project you need to require the package via composer : composer require hcgcloud/pterodactyl-sdk:dev-master Then use Composer's autoload unless you are using a framework that support composer autoload: require __DIR__.'/../vendor/autoload.php'; And finally create an instance of the SDK: $pterodactyl = new \\HCGCloud\\Pterodactyl\\Pterodactyl(API_KEY_HERE, BASE_URI_HERE); Then you can call the apis.","title":"Welcome"},{"location":"#pterodactyl-php-sdk","text":"Pterodactyl Panel API SDK for PHP (For Pterodactyl 0.7.x), a forked version from @FruitBytes.","title":"Pterodactyl PHP SDK"},{"location":"#quick-start","text":"To install the SDK in your project you need to require the package via composer : composer require hcgcloud/pterodactyl-sdk:dev-master Then use Composer's autoload unless you are using a framework that support composer autoload: require __DIR__.'/../vendor/autoload.php'; And finally create an instance of the SDK: $pterodactyl = new \\HCGCloud\\Pterodactyl\\Pterodactyl(API_KEY_HERE, BASE_URI_HERE); Then you can call the apis.","title":"Quick start"},{"location":"getting-started/","text":"Getting started \u00b6 Installation \u00b6 To install the SDK in your project you need to require the package via composer : composer require hcgcloud/pterodactyl-sdk:dev-master Then use Composer's autoload unless you are using a framework that support composer autoload: require __DIR__.'/../vendor/autoload.php'; And finally create an instance of the SDK, the API_KEY can be Account API or Application API , you can learn the difference below: $pterodactyl = new \\HCGCloud\\Pterodactyl\\Pterodactyl(API_KEY_HERE, BASE_URI_HERE); or you can also use create an instance in this style: use HCGCloud\\Pterodactyl\\Pterodactyl; $pterodactyl = new Pterodactyl(API_KEY_HERE, BASE_URI_HERE); Usage \u00b6 Type of API \u00b6 Before using other apis, you should know the difference between Account API and Application API . Account API (We call Client API in this docs) \u00b6 Account API is for a single user of your panel, it can perform like Send console command and Send power action while Application API can't. You can generate a key for an administrator account, then you can have the rights to control all servers. Can be generated from: https://yourpanel.url/account/api Application API \u00b6 Application API is for your panel itself, it can perform like Create Server and Create Node while Account API can't. Can be generated from: https://yourpanel.url/admin/api Example \u00b6 Using the pterodactyl instance you may perform multiple actions as well as retrieve the different resources Pterodactyl's API provides, here are some examples using Application API : $servers = $pterodactyl->servers(); This will give you an array of servers that you have access to, each server is represented by an instance of HCGCloud\\Pterodactyl\\Resources\\Server , this instance has multiple public properties like $name , $id , $owner , $memory , and others. You may also retrieve a single server using: $server = $pterodactyl->server(SERVER_ID_HERE); For other functions, you can find them from the navigation.","title":"Getting Started"},{"location":"getting-started/#getting-started","text":"","title":"Getting started"},{"location":"getting-started/#installation","text":"To install the SDK in your project you need to require the package via composer : composer require hcgcloud/pterodactyl-sdk:dev-master Then use Composer's autoload unless you are using a framework that support composer autoload: require __DIR__.'/../vendor/autoload.php'; And finally create an instance of the SDK, the API_KEY can be Account API or Application API , you can learn the difference below: $pterodactyl = new \\HCGCloud\\Pterodactyl\\Pterodactyl(API_KEY_HERE, BASE_URI_HERE); or you can also use create an instance in this style: use HCGCloud\\Pterodactyl\\Pterodactyl; $pterodactyl = new Pterodactyl(API_KEY_HERE, BASE_URI_HERE);","title":"Installation"},{"location":"getting-started/#usage","text":"","title":"Usage"},{"location":"getting-started/#type-of-api","text":"Before using other apis, you should know the difference between Account API and Application API .","title":"Type of API"},{"location":"getting-started/#account-api-we-call-client-api-in-this-docs","text":"Account API is for a single user of your panel, it can perform like Send console command and Send power action while Application API can't. You can generate a key for an administrator account, then you can have the rights to control all servers. Can be generated from: https://yourpanel.url/account/api","title":"Account API (We call Client API in this docs)"},{"location":"getting-started/#application-api","text":"Application API is for your panel itself, it can perform like Create Server and Create Node while Account API can't. Can be generated from: https://yourpanel.url/admin/api","title":"Application API"},{"location":"getting-started/#example","text":"Using the pterodactyl instance you may perform multiple actions as well as retrieve the different resources Pterodactyl's API provides, here are some examples using Application API : $servers = $pterodactyl->servers(); This will give you an array of servers that you have access to, each server is represented by an instance of HCGCloud\\Pterodactyl\\Resources\\Server , this instance has multiple public properties like $name , $id , $owner , $memory , and others. You may also retrieve a single server using: $server = $pterodactyl->server(SERVER_ID_HERE); For other functions, you can find them from the navigation.","title":"Example"},{"location":"client/list-servers/","text":"List Servers with Account API \u00b6 Get the collection of servers for the authenticated user. Usage \u00b6 $pterodactyl->listServers(); Parameters \u00b6 None Returns \u00b6 Note id , externalId , node , suspended , pack , createdAt , updatedAt will be always null , as they're not available with Account API. [{ \"id\" : null , \"externalId\" : null , \"uuid\" : \"76c59598-22df-4490-92bc-f6fb4a80e0c7\" , \"identifier\" : \"76c59598\" , \"node\" : null , \"name\" : \"server1\" , \"description\" : \"\" , \"suspended\" : null , \"pack\" : null , \"createdAt\" : null , \"updatedAt\" : null , \"attributes\" : { \"server_owner\" : true , \"identifier\" : \"76c59598\" , \"uuid\" : \"76c59598-22df-4490-92bc-f6fb4a80e0c7\" , \"name\" : \"server1\" , \"description\" : \"\" , \"limits\" : { \"memory\" : 128 , \"swap\" : 0 , \"disk\" : 256 , \"io\" : 500 , \"cpu\" : 0 }, \"feature_limits\" : { \"databases\" : 0 , \"allocations\" : 0 } }, \"limits\" : { \"memory\" : 128 , \"swap\" : 0 , \"disk\" : 256 , \"io\" : 500 , \"cpu\" : 0 }, \"allocations\" : [], \"object\" : \"server\" , \"serverOwner\" : true , \"featureLimits\" : { \"databases\" : 0 , \"allocations\" : 0 } }, { \"id\" : null , \"externalId\" : null , \"uuid\" : \"6928f121-45bf-4f95-869a-eaebf02cd2a6\" , \"identifier\" : \"6928f121\" , \"node\" : null , \"name\" : \"server2\" , \"description\" : \"\" , \"suspended\" : null , \"pack\" : null , \"createdAt\" : null , \"updatedAt\" : null , \"attributes\" : { \"server_owner\" : true , \"identifier\" : \"6928f121\" , \"uuid\" : \"6928f121-45bf-4f95-869a-eaebf02cd2a6\" , \"name\" : \"server2\" , \"description\" : \"\" , \"limits\" : { \"memory\" : 128 , \"swap\" : 0 , \"disk\" : 512 , \"io\" : 500 , \"cpu\" : 0 }, \"feature_limits\" : { \"databases\" : 0 , \"allocations\" : 0 } }, \"limits\" : { \"memory\" : 128 , \"swap\" : 0 , \"disk\" : 512 , \"io\" : 500 , \"cpu\" : 0 }, \"allocations\" : [], \"object\" : \"server\" , \"serverOwner\" : true , \"featureLimits\" : { \"databases\" : 0 , \"allocations\" : 0 } }]","title":"List Servers"},{"location":"client/list-servers/#list-servers-with-account-api","text":"Get the collection of servers for the authenticated user.","title":"List Servers with Account API"},{"location":"client/list-servers/#usage","text":"$pterodactyl->listServers();","title":"Usage"},{"location":"client/list-servers/#parameters","text":"None","title":"Parameters"},{"location":"client/list-servers/#returns","text":"Note id , externalId , node , suspended , pack , createdAt , updatedAt will be always null , as they're not available with Account API. [{ \"id\" : null , \"externalId\" : null , \"uuid\" : \"76c59598-22df-4490-92bc-f6fb4a80e0c7\" , \"identifier\" : \"76c59598\" , \"node\" : null , \"name\" : \"server1\" , \"description\" : \"\" , \"suspended\" : null , \"pack\" : null , \"createdAt\" : null , \"updatedAt\" : null , \"attributes\" : { \"server_owner\" : true , \"identifier\" : \"76c59598\" , \"uuid\" : \"76c59598-22df-4490-92bc-f6fb4a80e0c7\" , \"name\" : \"server1\" , \"description\" : \"\" , \"limits\" : { \"memory\" : 128 , \"swap\" : 0 , \"disk\" : 256 , \"io\" : 500 , \"cpu\" : 0 }, \"feature_limits\" : { \"databases\" : 0 , \"allocations\" : 0 } }, \"limits\" : { \"memory\" : 128 , \"swap\" : 0 , \"disk\" : 256 , \"io\" : 500 , \"cpu\" : 0 }, \"allocations\" : [], \"object\" : \"server\" , \"serverOwner\" : true , \"featureLimits\" : { \"databases\" : 0 , \"allocations\" : 0 } }, { \"id\" : null , \"externalId\" : null , \"uuid\" : \"6928f121-45bf-4f95-869a-eaebf02cd2a6\" , \"identifier\" : \"6928f121\" , \"node\" : null , \"name\" : \"server2\" , \"description\" : \"\" , \"suspended\" : null , \"pack\" : null , \"createdAt\" : null , \"updatedAt\" : null , \"attributes\" : { \"server_owner\" : true , \"identifier\" : \"6928f121\" , \"uuid\" : \"6928f121-45bf-4f95-869a-eaebf02cd2a6\" , \"name\" : \"server2\" , \"description\" : \"\" , \"limits\" : { \"memory\" : 128 , \"swap\" : 0 , \"disk\" : 512 , \"io\" : 500 , \"cpu\" : 0 }, \"feature_limits\" : { \"databases\" : 0 , \"allocations\" : 0 } }, \"limits\" : { \"memory\" : 128 , \"swap\" : 0 , \"disk\" : 512 , \"io\" : 500 , \"cpu\" : 0 }, \"allocations\" : [], \"object\" : \"server\" , \"serverOwner\" : true , \"featureLimits\" : { \"databases\" : 0 , \"allocations\" : 0 } }]","title":"Returns"}]}